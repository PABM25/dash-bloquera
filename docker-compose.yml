# docker-compose.yml (Modificado para usar .env)
version: '3.8'

services:
  # Servicio de Base de Datos (PostgreSQL)
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: ./.env # <- Lee las variables POSTGRES_* desde .env
    restart: always

  # Servicio de la Aplicación (Django + Gunicorn)
  web:
    build: .
    volumes:
      - static_volume:/app/staticfiles_collected # Comparte estáticos con Nginx
    env_file: ./.env # <- Lee las variables DJANGO_*, DB_* desde .env
    depends_on:
      - db # Espera a que la BD esté lista
    restart: always

  # Servicio del Proxy Inverso (Nginx)
  nginx:
    image: nginx:latest
    ports:
      - "80:80" # Expone el puerto 80 público
    volumes:
      # Monta el volumen de archivos estáticos recolectados
      - static_volume:/app/static
      # Usa nuestra configuración personalizada de Nginx
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
  static_volume: